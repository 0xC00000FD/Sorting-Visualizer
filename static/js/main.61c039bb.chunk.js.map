{"version":3,"sources":["logo.svg","Sorting Visualizer/buttons.jsx","Algorithms/countingsort.js","Algorithms/quicksort.js","Algorithms/bubblesort.js","Algorithms/mergesort.js","Sorting Visualizer/sortingvisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","styles","position","alignSelf","border","fontSize","padding","backgroundColor","Buttons","onClick","this","props","onHandleShuffle","style","cSort","qSort","bSort","mSort","React","Component","countingSort","arr","count","Max","Min","forEach","value","i","length","sortedArr","push","quicksort","animations","array","st","dr","index","partition","swap","j","temp","pivot","Math","floor","compare","bubblesort","sw","mergeSort","mergeSortHelper","mij","merge","auxiliary","undefined","k","SortingVisualizer","state","shuffle","bind","len","document","getElementById","array1","random","setState","sortedArray","arrayElements","getElementsByClassName","Promise","r","setTimeout","height","console","log","sort","a","b","id","map","className","key","type","min","max","onChange","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wKAAAA,EAAOC,QAAU,IAA0B,kC,2LCErCC,G,MAAS,CACXC,SAAU,WACVC,UAAW,SACXC,OAAQ,EACRC,SAAU,GACVC,QAAS,GACTC,gBAAiB,eAERC,EAAb,uKAEQ,OACI,oCACI,4BAAQC,QAASC,KAAKC,MAAMC,gBAAiBC,MAAOZ,GAApD,WACA,4BAAQQ,QAASC,KAAKC,MAAMG,MAAOD,MAAOZ,GAA1C,iBACA,4BAAQQ,QAASC,KAAKC,MAAMI,MAAOF,MAAOZ,GAA1C,cACA,4BAAQQ,QAASC,KAAKC,MAAMK,MAAOH,MAAOZ,GAA1C,eACA,4BAAQQ,QAASC,KAAKC,MAAMM,MAAOJ,MAAOZ,GAA1C,mBARhB,GAA6BiB,IAAMC,WCVtBC,EAAe,SAACC,GACzB,IAAMC,EAAQ,GACVC,EAAM,EAAGC,EAAM,IACnBH,EAAII,SAAQ,SAACC,GACNA,EAAQH,IACPA,EAAMG,GACPA,EAAQF,IACPA,EAAME,MAGd,IAAK,IAAIC,EAAIH,EAAKG,GAAKJ,EAAKI,IACxBL,EAAMK,GAAK,EAEf,IAAK,IAAIA,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,IAC5BL,EAAMD,EAAIM,KAAO,EAIrB,IADA,IAAME,EAAY,GACTF,EAAIH,EAAKG,GAAKJ,EAAKI,IACxB,KAAOL,EAAMK,GAAK,GACdE,EAAUC,KAAKH,GACfL,EAAMK,KAGd,OAAOE,GCxBEE,EAAY,SAAZA,EAAaC,EAAYC,EAAOC,EAAIC,GAC7C,GAAGF,EAAML,OAAS,EAAE,CAChB,IAAIQ,EAAQC,EAAUL,EAAYC,EAAOC,EAAIC,GAEzCD,EAAKE,EAAQ,GACbL,EAAUC,EAAYC,EAAOC,EAAIE,EAAQ,GAEzCA,EAAQD,GACRJ,EAAUC,EAAYC,EAAOG,EAAOD,GAG5C,OAAOF,GAGLK,EAAO,SAACL,EAAON,EAAGY,GACpB,IAAIC,EAAOP,EAAMN,GACjBM,EAAMN,GAAKM,EAAMM,GACjBN,EAAMM,GAAKC,GAGTH,EAAY,SAACL,EAAYC,EAAOC,EAAIC,GAItC,IAHA,IAAIM,EAAQR,EAAMS,KAAKC,OAAOT,EAAKC,GAAI,IACnCR,EAAIO,EACJK,EAAIJ,EACDR,GAAKY,GAAG,CAEX,IADAP,EAAWF,KAAK,CAACc,QAAS,CAACjB,EAAGY,KACvBN,EAAMN,GAAKc,GACdT,EAAWF,KAAK,CAACc,QAAS,CAACjB,EAAGY,KAC9BZ,IAGJ,IADAK,EAAWF,KAAK,CAACc,QAAS,CAACjB,EAAGY,KACvBN,EAAMM,GAAKE,GACdT,EAAWF,KAAK,CAACc,QAAS,CAACjB,EAAGY,KAC9BA,IAEJP,EAAWF,KAAK,CAACc,QAAS,CAACjB,EAAGY,KAC1BZ,GAAKY,IACLP,EAAWF,KAAK,CAACQ,KAAM,CAACX,EAAGY,KAC3BD,EAAKL,EAAON,EAAGY,GACfZ,IACAY,KAGR,OAAOZ,GC3CEkB,EAAa,WAA6B,IAA5Bb,EAA2B,uDAAd,GAAIC,EAAU,uCAC9Ca,GAAK,EACT,EAAE,CACEA,GAAK,EACL,IAAI,IAAInB,EAAI,EAAGA,EAAIM,EAAML,OAAQD,IAC7BK,EAAWF,KAAK,CAACc,QAASjB,IACvBM,EAAMN,GAAKM,EAAMN,EAAE,KAClBK,EAAWF,KAAK,CAACQ,KAAM,CAACX,EAAGA,EAAE,KAC7BW,EAAKL,EAAON,EAAGA,EAAE,GACjBmB,GAAK,UAGTA,GAER,OAAOb,GAGLK,EAAO,SAACL,EAAON,EAAGY,GACpB,IAAIC,EAAOP,EAAMN,GACjBM,EAAMN,GAAKM,EAAMM,GACjBN,EAAMM,GAAKC,GCpBFO,EAAY,WAA0C,IAAzCf,EAAwC,uDAA3B,GAAIC,EAAuB,uDAAf,GAAIC,EAAW,uCAAPC,EAAO,uCAC9D,GAAGF,EAAML,QAAU,EAAG,OAAOK,EAC7Be,EAAgBhB,EAAYC,EAAOC,EAAIC,IAGrCa,EAAkB,SAAlBA,EAAmBhB,EAAYC,EAAOC,EAAIC,GAC5C,GAAGD,IAAOC,EAAV,CAEA,IAAMc,EAAMP,KAAKC,OAAOT,EAAGC,GAAI,GAC/Ba,EAAgBhB,EAAYC,EAAOC,EAAIe,GACvCD,EAAgBhB,EAAYC,EAAOgB,EAAI,EAAGd,GAE1Ce,EAAMlB,EAAYC,EAAOC,EAAIC,EAAIc,KAG/BC,EAAQ,WAIV,IAJyD,IAA9ClB,EAA6C,uDAAhC,GAAIC,EAA4B,uDAApB,GAAIC,EAAgB,uCAAZC,EAAY,uCAARc,EAAQ,uCACpDtB,EAAIO,EAAIK,EAAIU,EAAI,EACdE,EAAY,GAEZxB,GAAKsB,GAAOV,GAAKJ,GACnBH,EAAWF,KAAK,CAACc,QAAS,CAACjB,EAAGY,KAC3BN,EAAMN,GAAKM,EAAMM,IAChBY,EAAUrB,KAAKG,EAAMN,IACrBA,MAEAwB,EAAUrB,KAAKG,EAAMM,IACrBA,KAIR,KAAMZ,GAAKsB,GACPjB,EAAWF,KAAK,CAACc,QAAS,CAACjB,OAAGyB,KAC9BD,EAAUrB,KAAKG,EAAMN,IACrBA,IACF,KAAMY,GAAKJ,GACTH,EAAWF,KAAK,CAACc,QAAS,CAACL,OAAGa,KAC9BD,EAAUrB,KAAKG,EAAMM,IACrBA,IAIJ,IADA,IAAIc,EAAI,EACA1B,EAAIO,EAAIP,GAAKQ,EAAIR,IACrBM,EAAMN,GAAKwB,EAAUE,KAEzBrB,EAAWF,KAAK,CAACoB,MAAO,CAAChB,EAAIiB,MCnCpBG,EAAb,kDACI,WAAY3C,GAAO,IAAD,8BACd,cAAMA,IAED4C,MAAQ,CAACtB,MAAO,IACrB,EAAKuB,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAK3C,MAAQ,EAAKA,MAAM2C,KAAX,gBACb,EAAK1C,MAAQ,EAAKA,MAAM0C,KAAX,gBACb,EAAKzC,MAAQ,EAAKA,MAAMyC,KAAX,gBACb,EAAKxC,MAAQ,EAAKA,MAAMwC,KAAX,gBARC,EADtB,sDAcQ,IADA,IAAIC,EAAMC,SAASC,eAAe,SAASlC,MAAuBmC,EAAS,GACnElC,EAAI,EAAGA,EAAI+B,EAAK/B,IACpBkC,EAAO/B,KAAKY,KAAKC,MAFsC,IAEhCD,KAAKoB,SAAkB,IAGlDpD,KAAKqD,SAAS,CAAC9B,MAAO4B,MAlB9B,sJAsBYG,EAActD,KAAK6C,MAAMtB,MACzBgC,EAAgBN,SAASO,uBAAuB,WAC9CtC,EAASqC,EAAcrC,OAC7BoC,EAAc5C,EAAaV,KAAK6C,MAAMtB,OAE9BN,EAAI,EA3BpB,YA2BuBA,EAAIC,GA3B3B,iCA4BkB,IAAIuC,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OA5BjD,OA6BYH,EAActC,GAAGd,MAAMN,gBAAkB,MA7BrD,OA2BmCoB,IA3BnC,uBAgCgBA,EAAI,EAhCpB,aAgCuBA,EAAIC,GAhC3B,kCAiCkB,IAAIuC,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OAjCjD,QAkCYH,EAActC,GAAGd,MAAMyD,OAAvB,UAAmCN,EAAYrC,GAAG,GAAlD,MACAsC,EAActC,GAAGd,MAAMN,gBAAkB,aAnCrD,QAgCmCoB,IAhCnC,yCAsCc,IAAIwC,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OAtC7C,QAuCQ1D,KAAKqD,SAAS,CAAC9B,MAAO+B,IAvC9B,6PA2CYhC,EAAa,GAAIiC,EAAgBN,SAASO,uBAAuB,WAEjEL,EAASnD,KAAK6C,MAAMtB,MAExB4B,EAAS9B,EAAUC,EAAY6B,EAAQ,EAAGA,EAAOjC,OAAO,GAEhDD,EAAI,EAjDpB,YAiDuBA,EAAIK,EAAWJ,QAjDtC,yBAkDyCwB,IAA1BpB,EAAWL,GAAGiB,QAlD7B,wBAmDgBqB,EAAcjC,EAAWL,GAAGiB,QAAQ,IAAI/B,MAAMN,gBAAkB,MAChE0D,EAAcjC,EAAWL,GAAGiB,QAAQ,IAAI/B,MAAMN,gBAAkB,MApDhF,UAsDsB,IAAI4D,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OAtDrD,QAuDgBH,EAAcjC,EAAWL,GAAGiB,QAAQ,IAAI/B,MAAMN,gBAAkB,aAChE0D,EAAcjC,EAAWL,GAAGiB,QAAQ,IAAI/B,MAAMN,gBAAkB,aAxDhF,gBA0DsC6C,IAAvBpB,EAAWL,GAAGW,KA1D7B,wBA2DgB2B,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMN,gBAAkB,MAC7D0D,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMN,gBAAkB,MAEzDiC,EAAOyB,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMyD,OACtDL,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMyD,OAASL,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMyD,OAC/FL,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMyD,OAAS9B,EAhEpE,UAkEsB,IAAI2B,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OAlErD,QAmEgBH,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMN,gBAAkB,aAC7D0D,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMN,gBAAkB,aApE7E,QAiD8CoB,IAjD9C,uBAwEQjB,KAAKqD,SAAS,CAAC9B,MAAO4B,IAxE9B,6PA4EY7B,EAAa,GAAIgC,EAActD,KAAK6C,MAAMtB,MAC1CgC,EAAgBN,SAASO,uBAAuB,WACpDF,EAAcnB,EAAWb,EAAYgC,GAE7BrC,EAAI,EAhFpB,YAgFuBA,EAAIK,EAAWJ,QAhFtC,yBAiFyCwB,IAA1BpB,EAAWL,GAAGiB,QAjF7B,wBAkFgBqB,EAAcjC,EAAWL,GAAGiB,SAAS/B,MAAMN,gBAAkB,MAlF7E,SAoFsB,IAAI4D,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OApFrD,OAqFgBH,EAAcjC,EAAWL,GAAGiB,SAAS/B,MAAMN,gBAAkB,aArF7E,gBAwFsC6C,IAAvBpB,EAAWL,GAAGW,KAxF7B,wBAyFgB2B,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMN,gBAAkB,MAC7D0D,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMN,gBAAkB,MAEzDiC,EAAOyB,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMyD,OACtDL,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMyD,OAASL,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMyD,OAC/FL,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMyD,OAAS9B,EA9FpE,UAgGsB,IAAI2B,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OAhGrD,QAiGgBH,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMN,gBAAkB,aAC7D0D,EAAcjC,EAAWL,GAAGW,KAAK,IAAIzB,MAAMN,gBAAkB,aAlG7E,QAgF8CoB,IAhF9C,uBAqGQjB,KAAKqD,SAAS,CAAC9B,MAAO+B,IArG9B,mQAyGYhC,EAAa,GAAIgC,EAActD,KAAK6C,MAAMtB,MAC1CgC,EAAgBN,SAASO,uBAAuB,WACpDnB,EAAUf,EAAYgC,EAAa,EAAGA,EAAYpC,OAAO,GACzD2C,QAAQC,IAAIxC,GAEJL,EAAI,EA9GpB,YA8GuBA,EAAIK,EAAWJ,QA9GtC,yBA+GyCwB,IAA1BpB,EAAWL,GAAGiB,QA/G7B,wBAgHgBqB,EAAcjC,EAAWL,GAAGiB,QAAQ,IAAI/B,MAAMN,gBAAkB,WAChC6C,IAA7BpB,EAAWL,GAAGiB,QAAQ,KACrBqB,EAAcjC,EAAWL,GAAGiB,QAAQ,IAAI/B,MAAMN,gBAAkB,OAlHpF,UAqHsB,IAAI4D,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OArHrD,QAsHgBH,EAAcjC,EAAWL,GAAGiB,QAAQ,IAAI/B,MAAMN,gBAAkB,kBAChC6C,IAA7BpB,EAAWL,GAAGiB,QAAQ,KACrBqB,EAAcjC,EAAWL,GAAGiB,QAAQ,IAAI/B,MAAMN,gBAAkB,cAxHpF,gBA2HuC6C,IAAxBpB,EAAWL,GAAGuB,MA3H7B,iBA4HsBf,EAAKH,EAAWL,GAAGuB,MAAM,GAAKlB,EAAWL,GAAGuB,MAAM,GAAGtB,OAAQM,EAAKF,EAAWL,GAAGuB,MAAM,GACxFG,EAAI,EACAd,EAAIL,EA9H5B,aA8HgCK,EAAIJ,GA9HpC,wBA+HoB8B,EAAc1B,GAAG1B,MAAMyD,OAAvB,UAAmCtC,EAAWL,GAAGuB,MAAM,GAAGG,KAAK,GAA/D,MA/HpB,UAgI0B,IAAIc,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,OAhIzD,QA8HwC7B,IA9HxC,wBA8G8CZ,IA9G9C,uBAqIQqC,EAAYS,MAAK,SAASC,EAAGC,GAAG,OAAOD,EAAEC,KACzCjE,KAAKqD,SAAS,CAAC9B,MAAO+B,IAtI9B,iJA0IQtD,KAAK8C,YA1Ib,+BA8IQ,OACI,oCACI,yBAAKoB,GAAG,cAEAlE,KAAK6C,MAAMtB,MAAM4C,KAAI,SAACnD,EAAOU,GAAR,OACjB,yBAAK0C,UAAU,UACXC,IAAK3C,EACLvB,MAAO,CAACyD,OAAQ5C,EAAM,UAKtC,yBAAKkD,GAAG,UACJ,2BAAOI,KAAK,QAAQC,IAAI,IAAIC,IAAI,MAAMN,GAAG,QAAQO,SAAUzE,KAAK8C,UAChE,kBAAC,EAAD,CAAS5C,gBAAiBF,KAAK8C,QAAS1C,MAAOJ,KAAKI,MAAOC,MAAOL,KAAKK,MAAOC,MAAON,KAAKM,MAAOC,MAAOP,KAAKO,cA5JjI,GAAuCC,IAAMC,WCI9BiE,MARf,WACE,OACE,yBAAKN,UAAU,OACb,kBAAC,EAAD,QCIcO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASC,eAAe,SDyHpB,kBAAmBiC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.61c039bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\n\r\nconst styles = {\r\n    position: \"relative\",\r\n    alignSelf: \"center\",\r\n    border: 0,\r\n    fontSize: 24,\r\n    padding: 35,\r\n    backgroundColor: \"aquamarine\"\r\n}\r\nexport class Buttons extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <button onClick={this.props.onHandleShuffle} style={styles}>Shuffle</button>\r\n                <button onClick={this.props.cSort} style={styles}>Counting Sort</button>\r\n                <button onClick={this.props.qSort} style={styles}>Quick Sort</button>\r\n                <button onClick={this.props.bSort} style={styles}>Bubble Sort</button>\r\n                <button onClick={this.props.mSort} style={styles}>Merge Sort</button>\r\n            </>\r\n        );\r\n    }\r\n}","export const countingSort = (arr) => {\r\n    const count = {};\r\n    let Max = 0, Min = 20000;\r\n    arr.forEach((value) => {\r\n        if(value > Max)\r\n            Max = value;\r\n        if(value < Min)\r\n            Min = value;\r\n    });\r\n    \r\n    for (let i = Min; i <= Max; i++) {\r\n        count[i] = 0;\r\n    }\r\n    for (let i = 0; i < arr.length; i++) {\r\n        count[arr[i]] += 1;\r\n    }\r\n    \r\n    const sortedArr = [];\r\n    for (let i = Min; i <= Max; i++) {\r\n        while (count[i] > 0) {\r\n            sortedArr.push(i);\r\n            count[i]--;\r\n        }\r\n    }\r\n    return sortedArr;\r\n} ","export const quicksort = (animations, array, st, dr) => {   //st = left, dr = right, mij = middle \r\n    if(array.length > 1){\r\n        let index = partition(animations, array, st, dr);\r\n\r\n        if (st < index - 1) { \r\n            quicksort(animations, array, st, index - 1);\r\n        }\r\n        if (index < dr) {\r\n            quicksort(animations, array, index, dr);\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nconst swap = (array, i, j) => {\r\n    let temp = array[i];\r\n    array[i] = array[j];//generic swap\r\n    array[j] = temp;\r\n}\r\n\r\nconst partition = (animations, array, st, dr) => {\r\n    var pivot = array[Math.floor((st + dr)/2)],\r\n        i = st, \r\n        j = dr; \r\n    while (i <= j) {\r\n        animations.push({compare: [i, j]});\r\n        while (array[i] < pivot) {\r\n            animations.push({compare: [i, j]});\r\n            i++;\r\n        }\r\n        animations.push({compare: [i, j]});\r\n        while (array[j] > pivot) {\r\n            animations.push({compare: [i, j]});\r\n            j--;\r\n        }\r\n        animations.push({compare: [i, j]});\r\n        if (i <= j) {\r\n            animations.push({swap: [i, j]});\r\n            swap(array, i, j); \r\n            i++;\r\n            j--;\r\n        }\r\n    }\r\n    return i;\r\n}","export const bubblesort = (animations = [], array) => {\r\n    let sw = false;\r\n    do{\r\n        sw = true;\r\n        for(let i = 0; i < array.length; i++){\r\n            animations.push({compare: i});\r\n            if(array[i] < array[i-1]){\r\n                animations.push({swap: [i, i-1]})\r\n                swap(array, i, i-1);\r\n                sw = false;\r\n            }\r\n        }\r\n    }while(!sw);\r\n\r\n    return array;\r\n}\r\n\r\nconst swap = (array, i, j) => {\r\n    let temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n}","export const mergeSort = (animations = [], array = [], st, dr) => {\r\n    if(array.length <= 1) return array;\r\n    mergeSortHelper(animations, array, st, dr);\r\n}\r\n\r\nconst mergeSortHelper = (animations, array, st, dr) => {\r\n    if(st === dr) return;\r\n\r\n    const mij = Math.floor((st+dr)/2);\r\n    mergeSortHelper(animations, array, st, mij);\r\n    mergeSortHelper(animations, array, mij+1, dr);\r\n\r\n    merge(animations, array, st, dr, mij);\r\n}\r\n\r\nconst merge = (animations = [], array = [], st, dr, mij) => {\r\n    let i = st, j = mij+1;\r\n    const auxiliary = [];\r\n\r\n    while(i <= mij && j <= dr){\r\n        animations.push({compare: [i, j]});\r\n        if(array[i] < array[j]){\r\n            auxiliary.push(array[i]);\r\n            i++;\r\n        } else {\r\n            auxiliary.push(array[j]);\r\n            j++;\r\n        }\r\n    }\r\n\r\n    while(i <= mij) {\r\n        animations.push({compare: [i, undefined]});\r\n        auxiliary.push(array[i]);\r\n        i++;\r\n    } while(j <= dr) {\r\n        animations.push({compare: [j, undefined]});\r\n        auxiliary.push(array[j]);\r\n        j++;\r\n    }\r\n\r\n    let k = 0;\r\n    for(let i = st; i <= dr; i++){\r\n        array[i] = auxiliary[k++];\r\n    }\r\n    animations.push({merge: [st, auxiliary]});\r\n}\r\n","import React from 'react';\r\nimport './sortingvisualizer.css';\r\nimport {Buttons} from './buttons';\r\nimport {countingSort} from '../Algorithms/countingsort';\r\nimport {quicksort} from '../Algorithms/quicksort';\r\nimport {bubblesort} from '../Algorithms/bubblesort';\r\nimport {mergeSort} from '../Algorithms/mergesort';\r\nimport {test} from '../Algorithms/testAlgo';\r\n\r\nexport class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {array: []};\r\n        this.shuffle = this.shuffle.bind(this);\r\n        this.cSort = this.cSort.bind(this);\r\n        this.qSort = this.qSort.bind(this);\r\n        this.bSort = this.bSort.bind(this);\r\n        this.mSort = this.mSort.bind(this);\r\n    }\r\n\r\n    shuffle(){\r\n        let len = document.getElementById('range').value, rbound = 10000, array1 = [];\r\n        for(let i = 0; i < len; i++){\r\n            array1.push(Math.floor(Math.random()*rbound + 1));\r\n        }\r\n\r\n        this.setState({array: array1});\r\n    }\r\n\r\n    async cSort(){\r\n        let sortedArray = this.state.array;\r\n        let arrayElements = document.getElementsByClassName('numbers');\r\n        const length = arrayElements.length;\r\n        sortedArray = countingSort(this.state.array);\r\n\r\n        for(let i = 0; i < length; i++){\r\n            await new Promise(r => setTimeout(r, 10));\r\n            arrayElements[i].style.backgroundColor = 'red';\r\n        }\r\n        \r\n        for(let i = 0; i < length; i++){\r\n            await new Promise(r => setTimeout(r, 10));\r\n            arrayElements[i].style.height = `${sortedArray[i]/10}px`;\r\n            arrayElements[i].style.backgroundColor = 'aquamarine';    \r\n        }\r\n\r\n        await new Promise(r => setTimeout(r, 10))\r\n        this.setState({array: sortedArray});\r\n    }\r\n\r\n    async qSort(){\r\n        let animations = [], arrayElements = document.getElementsByClassName('numbers');\r\n        //let speed = document.getElementById('speed')\r\n        let array1 = this.state.array;\r\n        \r\n        array1 = quicksort(animations, array1, 0, array1.length-1);\r\n        \r\n        for(let i = 0; i < animations.length; i++){\r\n            if(animations[i].compare !== undefined){\r\n                arrayElements[animations[i].compare[0]].style.backgroundColor = 'red';\r\n                arrayElements[animations[i].compare[1]].style.backgroundColor = 'red';\r\n\r\n                await new Promise(r => setTimeout(r, 10));\r\n                arrayElements[animations[i].compare[0]].style.backgroundColor = 'aquamarine';\r\n                arrayElements[animations[i].compare[1]].style.backgroundColor = 'aquamarine';\r\n            }\r\n            if(animations[i].swap !== undefined){\r\n                arrayElements[animations[i].swap[0]].style.backgroundColor = 'red';\r\n                arrayElements[animations[i].swap[1]].style.backgroundColor = 'red';\r\n\r\n                let temp = arrayElements[animations[i].swap[0]].style.height; \r\n                arrayElements[animations[i].swap[0]].style.height = arrayElements[animations[i].swap[1]].style.height;\r\n                arrayElements[animations[i].swap[1]].style.height = temp;\r\n\r\n                await new Promise(r => setTimeout(r, 10));\r\n                arrayElements[animations[i].swap[0]].style.backgroundColor = 'aquamarine';\r\n                arrayElements[animations[i].swap[1]].style.backgroundColor = 'aquamarine';\r\n            }\r\n        }\r\n\r\n        this.setState({array: array1});\r\n    }\r\n\r\n    async bSort(){\r\n        let animations = [], sortedArray = this.state.array;\r\n        let arrayElements = document.getElementsByClassName('numbers');\r\n        sortedArray = bubblesort(animations, sortedArray);\r\n\r\n        for(let i = 0; i < animations.length; i++){\r\n            if(animations[i].compare !== undefined){\r\n                arrayElements[animations[i].compare].style.backgroundColor = 'red';\r\n\r\n                await new Promise(r => setTimeout(r, 10));\r\n                arrayElements[animations[i].compare].style.backgroundColor = 'aquamarine';\r\n            }\r\n\r\n            if(animations[i].swap !== undefined){\r\n                arrayElements[animations[i].swap[0]].style.backgroundColor = 'red';\r\n                arrayElements[animations[i].swap[1]].style.backgroundColor = 'red';\r\n\r\n                let temp = arrayElements[animations[i].swap[0]].style.height; \r\n                arrayElements[animations[i].swap[0]].style.height = arrayElements[animations[i].swap[1]].style.height;\r\n                arrayElements[animations[i].swap[1]].style.height = temp;\r\n\r\n                await new Promise(r => setTimeout(r, 10));\r\n                arrayElements[animations[i].swap[0]].style.backgroundColor = 'aquamarine';\r\n                arrayElements[animations[i].swap[1]].style.backgroundColor = 'aquamarine';\r\n            }\r\n        }\r\n        this.setState({array: sortedArray});\r\n    }\r\n\r\n    async mSort(){\r\n        let animations = [], sortedArray = this.state.array;\r\n        let arrayElements = document.getElementsByClassName('numbers');\r\n        mergeSort(animations, sortedArray, 0, sortedArray.length-1);\r\n        console.log(animations);\r\n\r\n        for(let i = 0; i < animations.length; i++){\r\n            if(animations[i].compare !== undefined){\r\n                arrayElements[animations[i].compare[0]].style.backgroundColor = 'red';\r\n                if(animations[i].compare[1] !== undefined){\r\n                    arrayElements[animations[i].compare[1]].style.backgroundColor = 'red';\r\n                }\r\n\r\n                await new Promise(r => setTimeout(r, 15));\r\n                arrayElements[animations[i].compare[0]].style.backgroundColor = 'aquamarine';\r\n                if(animations[i].compare[1] !== undefined){\r\n                    arrayElements[animations[i].compare[1]].style.backgroundColor = 'aquamarine';\r\n                }\r\n            }\r\n            if(animations[i].merge !== undefined){\r\n                const dr = animations[i].merge[0] + animations[i].merge[1].length, st = animations[i].merge[0];\r\n                let k = 0;\r\n                for(let j = st; j < dr; j++){\r\n                    arrayElements[j].style.height = `${animations[i].merge[1][k++]/10}px`;\r\n                    await new Promise(r => setTimeout(r, 10));\r\n                }\r\n            }\r\n        }\r\n\r\n        sortedArray.sort(function(a, b){return a-b});\r\n        this.setState({array: sortedArray});\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.shuffle();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div id=\"numbersdiv\">\r\n                    {   \r\n                        this.state.array.map((value, index) => (\r\n                            <div className=\"numbers\"\r\n                                key={index}\r\n                                style={{height: value/10}}>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div id=\"button\">\r\n                    <input type=\"range\" min=\"5\" max=\"500\" id=\"range\" onChange={this.shuffle} />\r\n                    <Buttons onHandleShuffle={this.shuffle} cSort={this.cSort} qSort={this.qSort} bSort={this.bSort} mSort={this.mSort} /*iSort={this.iSort}*//>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {SortingVisualizer} from './Sorting Visualizer/sortingvisualizer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}